import {
  __publicField
} from "./chunk-TCQZMY3T.js";

// node_modules/undo-redo-ts/UndoManager.ts
var UndoManager = class {
  constructor(limit = 0) {
    __publicField(this, "commands", []);
    __publicField(this, "index", -1);
    __publicField(this, "limit");
    this.limit = limit;
  }
  add(command) {
    this.commands = this.commands.slice(0, this.index + 1);
    this.commands.push(command);
    if (this.limit > 0 && this.commands.length > this.limit) {
      this.commands.shift();
    } else {
      this.index++;
    }
    return this;
  }
  redo() {
    if (this.index < this.commands.length - 1) {
      this.index++;
      this.commands[this.index].redo();
      return true;
    }
    return false;
  }
  undo() {
    if (this.index >= 0) {
      this.commands[this.index].undo();
      this.index--;
      return true;
    }
    return false;
  }
  commandStack() {
    return this.commands.slice(0);
  }
};
export {
  UndoManager
};
//# sourceMappingURL=undo-redo-ts.js.map
